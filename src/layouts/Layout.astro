---
import '../styles/global.css';

export interface Props {
  title: string;
  description?: string;
}

const { title, description = "Your deals website powered by Kelly" } = Astro.props;

// Fetch brand data, categories, regions and stores from API
let brandData = null;
let logoUrl = null;
let navigationCategories = [];
let navigationRegions = [];
let navigationStores = [];

const API_BASE = 'https://mintdealsbackend-production.up.railway.app/api';

try {
  // Fetch all data in parallel
  const [brandResponse, categoriesResponse, regionsResponse, storesResponse] = await Promise.allSettled([
    fetch(`${API_BASE}/brands?populate=*`),
    fetch(`${API_BASE}/categories?populate=*&pagination[pageSize]=10&sort=Name:asc`),
    fetch(`${API_BASE}/regions?populate=*`),
    fetch(`${API_BASE}/stores?populate=region&pagination[pageSize]=500`)
  ]);

  // Process brand data
  if (brandResponse.status === 'fulfilled' && brandResponse.value.ok) {
    const response = brandResponse.value;
    const data = await response.json();

    // For collection type, use data array; for single type, use data directly
    brandData = Array.isArray(data?.data) ? data?.data?.[0] : data?.data;

    // Get logo URL
    let logo = null;
    if (brandData?.Logo) {
      logo = brandData.Logo;
    } else if (brandData?.attributes?.Logo) {
      logo = brandData.attributes.Logo;
    }

    if (logo?.url) {
      logoUrl = logo.url.startsWith('http')
        ? logo.url
        : `http://localhost:1337${logo.url}`;
    }
  }

  // Process categories data
  if (categoriesResponse.status === 'fulfilled' && categoriesResponse.value.ok) {
    const response = categoriesResponse.value;
    const data = await response.json();

    if (data?.data) {
      navigationCategories = data.data.map(category => {
        // Handle both Strapi v4 format (with attributes) or direct format
        const isV4 = !!category.attributes;
        const catData = isV4 ? category.attributes : category;

        return {
          name: catData.Name || catData.name || '',
          slug: catData.Slug || catData.slug || catData.Name?.toLowerCase().replace(/\s+/g, '-') || category.documentId,
          description: catData.Description || catData.description || '',
          isActive: catData.IsActive !== false && catData.isActive !== false
        };
      }).filter(cat => cat.name && cat.isActive);
    }
  }

  // Process regions data
  if (regionsResponse.status === 'fulfilled' && regionsResponse.value.ok) {
    const response = regionsResponse.value;
    const data = await response.json();

    if (data?.data) {
      navigationRegions = data.data.map(region => {
        // Generate slug from name since API doesn't provide slug or code
        const slug = region.slug || (region.name ? region.name.toLowerCase().replace(/\s+/g, '-') : region.documentId);
        const code = region.code || (region.name ? region.name.substring(0, 2).toUpperCase() : 'XX');

        return {
          id: region.id,
          documentId: region.documentId,
          name: region.name || 'Unknown Region',
          code: code,
          slug: slug,
          timezone: region.timezone,
          age_restriction: region.age_restriction
        };
      });
    }
  }

  // Process stores data
  if (storesResponse.status === 'fulfilled' && storesResponse.value.ok) {
    const response = storesResponse.value;
    const data = await response.json();

    if (data?.data) {
      navigationStores = data.data.map(store => {
        // Extract region ID - it will be an object when populated
        const regionId = typeof store.region === 'object' && store.region !== null ? store.region.id : store.region;

        return {
          id: store.id,
          documentId: store.documentId,
          name: store.name || 'Unnamed Store',
          slug: store.slug || store.documentId,
          city: store.address?.city || store.city,
          state: store.address?.state || store.state,
          phone: store.phone,
          is_active: store.is_active !== false,
          region: store.region, // Keep full region object
          regionId: regionId // Also store the ID for easy filtering
        };
      }).filter(store => store.is_active);
    }
  }
} catch (error) {
  console.log('Could not fetch data:', error);
}
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <!-- Theme detection script -->
    <script is:inline>
      // Prevent flash of wrong theme - this must run immediately
      (function() {
        const savedTheme = localStorage.getItem('theme');
        const systemTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
        const theme = savedTheme || systemTheme;

        if (theme === 'dark') {
          document.documentElement.classList.add('dark');
        } else {
          document.documentElement.classList.remove('dark');
        }
      })();
    </script>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content={description} />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="bg-gray-50 dark:bg-gray-900 min-h-screen transition-colors relative">
    <!-- Animated Smoke Background -->
    <div class="smoke-container">
      <div class="smoke smoke1"></div>
      <div class="smoke smoke2"></div>
      <div class="smoke smoke3"></div>
      <div class="smoke smoke4"></div>
      <div class="smoke smoke5"></div>
    </div>

    <header class="bg-black shadow-lg relative z-[100]">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center py-6">
          <div class="flex items-center">
            <a href="/" class="flex items-center space-x-2 hover:opacity-80 transition-opacity">
              <!-- Mint Cannabis Logo -->
              <img
                src="/assets/Mint_Full_Logo.png"
                alt="Mint Cannabis"
                class="h-12 w-auto object-contain"
              />
            </a>
          </div>
          
          <div class="flex items-center space-x-4">
            <nav class="hidden md:flex space-x-8">
              <a href="/" class="text-gray-200 hover:text-yellow-600 dark:hover:text-yellow-400 px-3 py-2 rounded-md text-sm font-semibold tracking-tight transition-colors">
                Home
              </a>

              <!-- Categories Dropdown -->
              <div class="dropdown-group">
                <button class="flex items-center text-gray-200 hover:text-emerald-600 dark:hover:text-emerald-400 px-3 py-2 rounded-md text-sm font-semibold tracking-tight transition-colors">
                  Categories
                  <svg class="w-4 h-4 ml-1 transition-transform group-hover:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                  </svg>
                </button>
                <div class="dropdown-menu absolute left-0 mt-2 w-96 bg-gray-900 rounded-lg shadow-2xl border border-gray-700 z-[200]">
                  <div class="py-2">
                    <a href="/categories" class="block px-4 py-2 text-sm font-medium tracking-tight text-gray-200 hover:bg-emerald-50 dark:hover:bg-emerald-900/20 hover:text-emerald-600 dark:hover:text-emerald-400">
                      üìö All Categories
                    </a>
                    <div class="border-t border-gray-700 my-1"></div>

                    <!-- Category Overview -->
                    {navigationCategories.length > 0 ? (
                      <div class="max-h-80 overflow-y-auto">
                        {navigationCategories.map(category => (
                          <div class="px-2 py-1">
                            <!-- Category Header -->
                            <div class="mb-2">
                              <a
                                href={`/${category.slug}`}
                                class="block px-2 py-1 text-sm font-medium text-emerald-700 dark:text-emerald-300 hover:bg-emerald-50 dark:hover:bg-emerald-900/20 rounded"
                                title={category.description}
                              >
                                üåø {category.name}
                              </a>
                            </div>

                            <!-- State/Region Links for this category -->
                            <div class="ml-4 space-y-1">
                              <a
                                href={`/${category.slug}/${category.slug}-in-arizona`}
                                class="block px-2 py-1 text-xs text-gray-600 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-700 rounded"
                              >
                                üìç {category.name} in Arizona
                              </a>
                              <div class="ml-4 space-y-1">
                                <a
                                  href={`/${category.slug}/${category.slug}-in-arizona/${category.slug}-in-tempe`}
                                  class="block px-2 py-1 text-xs text-gray-500 dark:text-gray-500 hover:bg-gray-50 dark:hover:bg-gray-700 rounded"
                                >
                                  ‚Ä¢ Tempe
                                </a>
                                <a
                                  href={`/${category.slug}/${category.slug}-in-arizona/${category.slug}-in-phoenix`}
                                  class="block px-2 py-1 text-xs text-gray-500 dark:text-gray-500 hover:bg-gray-50 dark:hover:bg-gray-700 rounded"
                                >
                                  ‚Ä¢ Phoenix
                                </a>
                              </div>

                              <a
                                href={`/${category.slug}/${category.slug}-in-nevada`}
                                class="block px-2 py-1 text-xs text-gray-600 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-700 rounded"
                              >
                                üìç {category.name} in Nevada
                              </a>
                              <div class="ml-4 space-y-1">
                                <a
                                  href={`/${category.slug}/${category.slug}-in-nevada/${category.slug}-in-las-vegas`}
                                  class="block px-2 py-1 text-xs text-gray-500 dark:text-gray-500 hover:bg-gray-50 dark:hover:bg-gray-700 rounded"
                                >
                                  ‚Ä¢ Las Vegas
                                </a>
                                <div class="ml-4">
                                  <a
                                    href={`/${category.slug}/${category.slug}-in-nevada/${category.slug}-in-las-vegas/${category.slug}-on-the-strip`}
                                    class="block px-2 py-1 text-xs text-gray-400 dark:text-gray-500 hover:bg-gray-50 dark:hover:bg-gray-700 rounded"
                                  >
                                    ‚ó¶ The Strip
                                  </a>
                                </div>
                              </div>
                            </div>

                            {category !== navigationCategories[navigationCategories.length - 1] && (
                              <div class="border-t border-gray-700 my-2"></div>
                            )}
                          </div>
                        ))}
                      </div>
                    ) : (
                      <div class="px-4 py-2">
                        <p class="text-sm text-gray-500 dark:text-gray-400">No categories available</p>
                      </div>
                    )}
                  </div>
                </div>
              </div>

              <!-- Locations Dropdown -->
              <div class="dropdown-group">
                <button class="flex items-center text-gray-200 hover:text-green-600 dark:hover:text-green-400 px-3 py-2 rounded-md text-sm font-semibold tracking-tight transition-colors">
                  Locations
                  <svg class="w-4 h-4 ml-1 transition-transform group-hover:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                  </svg>
                </button>
                <div class="dropdown-menu absolute left-0 mt-2 w-80 bg-gray-900 rounded-lg shadow-2xl border border-gray-700 z-[200]">
                  <div class="py-2">
                    <a href="/stores" class="block px-4 py-2 text-sm font-medium tracking-tight text-gray-200 hover:bg-green-50 dark:hover:bg-green-900/20 hover:text-green-600 dark:hover:text-green-400">
                      üè™ All Store Locations
                    </a>
                    <a href="/regions" class="block px-4 py-2 text-sm font-medium tracking-tight text-gray-200 hover:bg-green-50 dark:hover:bg-green-900/20 hover:text-green-600 dark:hover:text-green-400">
                      üó∫Ô∏è Browse by Region
                    </a>
                    <div class="border-t border-gray-700 my-1"></div>

                    <!-- Dynamic Regions with Stores -->
                    {navigationRegions.length > 0 ? (
                      <div class="max-h-96 overflow-y-auto">
                        {navigationRegions.map((region, index) => {
                          // Get stores for this region - match by region ID
                          const regionStores = navigationStores.filter(store => store.regionId === region.id);

                          // Get region icon based on name/code
                          const regionIcon = region.code === 'AZ' || region.name?.includes('Arizona') ? 'üåµ' :
                                           region.code === 'NV' || region.name?.includes('Nevada') ? 'üé∞' :
                                           region.code === 'IL' || region.name?.includes('Illinois') ? 'üåÜ' :
                                           region.code === 'MI' || region.name?.includes('Michigan') ? 'üèûÔ∏è' :
                                           region.code === 'MO' || region.name?.includes('Missouri') ? 'üèõÔ∏è' :
                                           region.code === 'FL' || region.name?.includes('Florida') ? 'üå¥' : 'üìç';

                          return (
                            <>
                              <div class="px-2 py-1">
                                <div class="mb-2">
                                  <a
                                    href={`/region/${region.slug || region.code?.toLowerCase() || region.id}`}
                                    class="block px-2 py-1 text-sm font-medium text-green-700 dark:text-green-300 hover:bg-green-50 dark:hover:bg-green-900/20 rounded"
                                  >
                                    {regionIcon} {region.name} ({regionStores.length})
                                  </a>
                                </div>
                                {regionStores.length > 0 && (
                                  <div class="ml-4 space-y-1">
                                    {regionStores.slice(0, 5).map(store => (
                                      <a
                                        href={`/location/${store.slug}`}
                                        class="block px-2 py-1 text-xs text-gray-600 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-700 rounded truncate"
                                        title={store.name}
                                      >
                                        üìç {store.name}
                                        {store.city && (
                                          <span class="text-gray-400 dark:text-gray-500 ml-1">‚Ä¢ {store.city}</span>
                                        )}
                                      </a>
                                    ))}
                                    {regionStores.length > 5 && (
                                      <a
                                        href={`/region/${region.slug || region.code?.toLowerCase() || region.id}`}
                                        class="block px-2 py-1 text-xs text-green-600 dark:text-green-400 hover:bg-gray-50 dark:hover:bg-gray-700 rounded font-medium"
                                      >
                                        View all {regionStores.length} locations ‚Üí
                                      </a>
                                    )}
                                  </div>
                                )}
                              </div>
                              {index < navigationRegions.length - 1 && (
                                <div class="border-t border-gray-700 my-2"></div>
                              )}
                            </>
                          );
                        })}
                      </div>
                    ) : (
                      <div class="px-4 py-2">
                        <p class="text-sm text-gray-500 dark:text-gray-400">Loading locations...</p>
                      </div>
                    )}
                  </div>
                </div>
              </div>

              <!-- Deals Dropdown -->
              <div class="dropdown-group">
                <button class="flex items-center text-gray-200 hover:text-orange-600 dark:hover:text-orange-400 px-3 py-2 rounded-md text-sm font-semibold tracking-tight transition-colors">
                  Deals
                  <svg class="w-4 h-4 ml-1 transition-transform group-hover:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                  </svg>
                </button>
                <div class="dropdown-menu absolute left-0 mt-2 w-64 bg-gray-900 rounded-lg shadow-2xl border border-gray-700 z-[200]">
                  <div class="py-2">
                    <a href="/deals" class="block px-4 py-2 text-sm font-medium tracking-tight text-gray-200 hover:bg-orange-50 dark:hover:bg-orange-900/20 hover:text-orange-600 dark:hover:text-orange-400">
                      üî• Current Deals
                    </a>
                    <a href="/all-store-specials" class="block px-4 py-2 text-sm font-medium tracking-tight text-gray-200 hover:bg-green-50 dark:hover:bg-green-900/20 hover:text-green-600 dark:hover:text-green-400">
                      üè™ All Store Specials
                    </a>
                    <a href="/specials" class="block px-4 py-2 text-sm font-medium tracking-tight text-gray-200 hover:bg-yellow-50 dark:hover:bg-yellow-900/20 hover:text-yellow-600 dark:hover:text-yellow-400">
                      ‚≠ê Special Offers
                    </a>
                    <a href="/northern-specials" class="block px-4 py-2 text-sm font-medium tracking-tight text-gray-200 hover:bg-yellow-50 dark:hover:bg-yellow-900/20 hover:text-yellow-600 dark:hover:text-yellow-400">
                      üìç Northern Ave Specials
                    </a>
                  </div>
                </div>
              </div>

              <a href="#about" class="text-gray-200 hover:text-green-600 dark:hover:text-green-400 px-3 py-2 rounded-md text-sm font-semibold tracking-tight transition-colors">
                About
              </a>
            </nav>
            
            <!-- Theme Toggle Button -->
            <button id="theme-toggle" class="p-2 rounded-lg bg-gray-800 text-gray-200 hover:bg-gray-700 transition-colors">
              <svg id="theme-toggle-dark-icon" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
              </svg>
              <svg id="theme-toggle-light-icon" class="hidden w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd"></path>
              </svg>
            </button>
          </div>

          <!-- Mobile menu button -->
          <div class="md:hidden">
            <button id="mobile-menu-button" class="text-gray-200 hover:text-yellow-600 dark:hover:text-yellow-400 focus:outline-none">
              <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
              </svg>
            </button>
          </div>
        </div>

        <!-- Mobile menu -->
        <div id="mobile-menu" class="md:hidden hidden border-t border-gray-700 pt-4 pb-3 relative z-[150]">
          <a href="/" class="block px-3 py-2 text-gray-200 hover:text-yellow-600 dark:hover:text-yellow-400 text-sm font-medium">
            Home
          </a>

          <!-- Mobile Store Locations -->
          <div>
            <button id="mobile-stores-toggle" class="flex items-center justify-between w-full px-3 py-2 text-gray-200 hover:text-green-600 dark:hover:text-green-400 text-sm font-medium">
              Locations
              <svg id="mobile-stores-icon" class="w-4 h-4 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
              </svg>
            </button>
            <div id="mobile-stores-menu" class="hidden pl-6 pb-2">
              <a href="/stores" class="block px-3 py-1 text-sm text-gray-600 dark:text-gray-400 hover:text-green-600 dark:hover:text-green-400">
                üè™ All Store Locations
              </a>
              <a href="/locations?state=AZ&city=Tempe" class="block px-3 py-1 text-sm text-gray-600 dark:text-gray-400 hover:text-green-600 dark:hover:text-green-400">
                üìç Tempe Locations
              </a>
              <a href="/locations?state=AZ&city=Phoenix" class="block px-3 py-1 text-sm text-gray-600 dark:text-gray-400 hover:text-green-600 dark:hover:text-green-400">
                üìç Phoenix Locations
              </a>
              <a href="/locations?state=NV&city=Las Vegas" class="block px-3 py-1 text-sm text-gray-600 dark:text-gray-400 hover:text-green-600 dark:hover:text-green-400">
                üìç Las Vegas Locations
              </a>
            </div>
          </div>

          <!-- Mobile Categories -->
          <div>
            <button id="mobile-categories-toggle" class="flex items-center justify-between w-full px-3 py-2 text-gray-200 hover:text-emerald-600 dark:hover:text-emerald-400 text-sm font-medium">
              Categories
              <svg id="mobile-categories-icon" class="w-4 h-4 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
              </svg>
            </button>
            <div id="mobile-categories-menu" class="hidden pl-6 pb-2">
              <a href="/categories" class="block px-3 py-1 text-sm text-gray-600 dark:text-gray-400 hover:text-emerald-600 dark:hover:text-emerald-400">
                üìö All Categories
              </a>
              <a href="/learn/flower" class="block px-3 py-1 text-sm text-gray-600 dark:text-gray-400 hover:text-emerald-600 dark:hover:text-emerald-400">
                üåø Flower
              </a>
              <a href="/learn/edibles" class="block px-3 py-1 text-sm text-gray-600 dark:text-gray-400 hover:text-emerald-600 dark:hover:text-emerald-400">
                üç≠ Edibles
              </a>
              <a href="/learn/concentrates" class="block px-3 py-1 text-sm text-gray-600 dark:text-gray-400 hover:text-emerald-600 dark:hover:text-emerald-400">
                üçØ Concentrates
              </a>
              <a href="/learn/vaporizers" class="block px-3 py-1 text-sm text-gray-600 dark:text-gray-400 hover:text-emerald-600 dark:hover:text-emerald-400">
                üí® Vaporizers
              </a>
              <a href="/learn/pre-rolls" class="block px-3 py-1 text-sm text-gray-600 dark:text-gray-400 hover:text-emerald-600 dark:hover:text-emerald-400">
                üö¨ Pre-Rolls
              </a>
              <a href="/learn/topicals" class="block px-3 py-1 text-sm text-gray-600 dark:text-gray-400 hover:text-emerald-600 dark:hover:text-emerald-400">
                üß¥ Topicals
              </a>
              <a href="/learn/cartridges" class="block px-3 py-1 text-sm text-gray-600 dark:text-gray-400 hover:text-emerald-600 dark:hover:text-emerald-400">
                üñäÔ∏è Cartridges
              </a>
            </div>
          </div>

          <a href="/states" class="block px-3 py-2 text-gray-200 hover:text-green-600 dark:hover:text-green-400 text-sm font-medium">
            States
          </a>
          <a href="/events" class="block px-3 py-2 text-gray-200 hover:text-yellow-600 dark:hover:text-yellow-400 text-sm font-medium">
            Events
          </a>
          <!-- Mobile Deals -->
          <div>
            <button id="mobile-deals-toggle" class="flex items-center justify-between w-full px-3 py-2 text-gray-200 hover:text-orange-600 dark:hover:text-orange-400 text-sm font-medium">
              Deals
              <svg id="mobile-deals-icon" class="w-4 h-4 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
              </svg>
            </button>
            <div id="mobile-deals-menu" class="hidden pl-6 pb-2">
              <a href="/deals" class="block px-3 py-1 text-sm text-gray-600 dark:text-gray-400 hover:text-orange-600 dark:hover:text-orange-400">
                üî• Current Deals
              </a>
              <a href="/all-store-specials" class="block px-3 py-1 text-sm text-gray-600 dark:text-gray-400 hover:text-green-600 dark:hover:text-green-400">
                üè™ All Store Specials
              </a>
              <a href="/specials" class="block px-3 py-1 text-sm text-gray-600 dark:text-gray-400 hover:text-yellow-600 dark:hover:text-yellow-400">
                ‚≠ê Special Offers
              </a>
              <a href="/northern-specials" class="block px-3 py-1 text-sm text-gray-600 dark:text-gray-400 hover:text-yellow-600 dark:hover:text-yellow-400">
                üìç Northern Ave Specials
              </a>
            </div>
          </div>
          <a href="#about" class="block px-3 py-2 text-gray-200 hover:text-green-600 dark:hover:text-green-400 text-sm font-medium">
            About
          </a>
        </div>
      </div>
    </header>

    <main class="relative z-10">
      <slot />
    </main>

    <!-- Footer -->
    <footer class="bg-gray-800 dark:bg-gray-900 text-white relative z-10">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div class="grid grid-cols-1 md:grid-cols-4 gap-8">
          <!-- Company Info -->
          <div class="col-span-1">
            <div class="flex items-center mb-4">
              <img
                src="/assets/Mint_Full_Logo.png"
                alt="Mint Cannabis"
                class="h-8 w-auto mr-3 object-contain"
              />
              <h3 class="text-lg font-bold tracking-tight">Mint Cannabis</h3>
            </div>
            <p class="text-gray-300 text-sm">
              Your trusted source for cannabis deals and dispensary information in Florida.
            </p>
          </div>

          <!-- Quick Links -->
          <div>
            <h4 class="text-md font-semibold tracking-tight mb-4">Quick Links</h4>
            <ul class="space-y-2 text-sm">
              <li><a href="/" class="text-gray-300 hover:text-white transition-colors">Home</a></li>
              <li><a href="/stores" class="text-gray-300 hover:text-white transition-colors">Store Locations</a></li>
              <li><a href="/categories" class="text-gray-300 hover:text-white transition-colors">Categories</a></li>
              <li><a href="/deals" class="text-gray-300 hover:text-white transition-colors">Current Deals</a></li>
              <li><a href="/all-store-specials" class="text-gray-300 hover:text-white transition-colors">All Store Specials</a></li>
              <li><a href="#about" class="text-gray-300 hover:text-white transition-colors">About Us</a></li>
            </ul>
          </div>

          <!-- Educational Resources -->
          <div>
            <h4 class="text-md font-semibold tracking-tight mb-4">Educational Resources</h4>
            <ul class="space-y-2 text-sm">
              <li><a href="/dosage-guide" class="text-gray-300 hover:text-white transition-colors">Dosage Guide</a></li>
              <li><a href="/dosage-guide#dosage-forms" class="text-gray-300 hover:text-white transition-colors">Dosage Forms</a></li>
              <li><a href="/dosage-guide#products" class="text-gray-300 hover:text-white transition-colors">Product Information</a></li>
              <li><a href="#safety" class="text-gray-300 hover:text-white transition-colors">Safety Guidelines</a></li>
            </ul>
          </div>

          <!-- Legal & Support -->
          <div>
            <h4 class="text-md font-semibold tracking-tight mb-4">Legal & Support</h4>
            <ul class="space-y-2 text-sm">
              <li><a href="#privacy" class="text-gray-300 hover:text-white transition-colors">Privacy Policy</a></li>
              <li><a href="#terms" class="text-gray-300 hover:text-white transition-colors">Terms of Service</a></li>
              <li><a href="#contact" class="text-gray-300 hover:text-white transition-colors">Contact Us</a></li>
              <li><a href="#disclaimer" class="text-gray-300 hover:text-white transition-colors">Medical Disclaimer</a></li>
            </ul>
          </div>
        </div>

        <!-- Bottom Bar -->
        <div class="border-t border-gray-700 dark:border-gray-600 mt-8 pt-8 text-center">
          <p class="text-gray-400 text-sm">
            ¬© 2025 FLMintDeals. All rights reserved. This website is for informational purposes only.
          </p>
          <p class="text-gray-400 text-xs mt-2">
            Please consume cannabis responsibly and in accordance with Florida state laws.
          </p>
        </div>
      </div>
    </footer>


    <script>
      document.addEventListener('DOMContentLoaded', function() {
        console.log('Theme toggle script loaded');
        
        // Theme toggle functionality
        function toggleTheme() {
          console.log('Toggle theme clicked');
          const html = document.documentElement;
          const isDark = html.classList.contains('dark');

          console.log('Current state - isDark:', isDark);
          console.log('Current classes:', html.className);

          if (isDark) {
            html.classList.remove('dark');
            localStorage.setItem('theme', 'light');
            console.log('Switched to light mode');
            console.log('New classes:', html.className);
          } else {
            html.classList.add('dark');
            localStorage.setItem('theme', 'dark');
            console.log('Switched to dark mode');
            console.log('New classes:', html.className);
          }

          // Update button icons
          updateIcons();

          // Force a more comprehensive style recalculation
          setTimeout(() => {
            console.log('Final state check - isDark:', document.documentElement.classList.contains('dark'));
            console.log('Final classes:', document.documentElement.className);

            // Verify body background is updating
            const body = document.body;
            const computedStyle = window.getComputedStyle(body);
            console.log('Body background color:', computedStyle.backgroundColor);
          }, 100);
        }
        
        function updateIcons() {
          const isDark = document.documentElement.classList.contains('dark');
          const lightIcon = document.getElementById('theme-toggle-light-icon');
          const darkIcon = document.getElementById('theme-toggle-dark-icon');

          console.log('Updating icons - isDark:', isDark);
          console.log('Light icon found:', !!lightIcon);
          console.log('Dark icon found:', !!darkIcon);

          if (isDark) {
            // Show sun icon (light mode) when in dark mode
            lightIcon?.classList.remove('hidden');
            darkIcon?.classList.add('hidden');
            console.log('Showing light icon (sun)');
          } else {
            // Show moon icon (dark mode) when in light mode
            lightIcon?.classList.add('hidden');
            darkIcon?.classList.remove('hidden');
            console.log('Showing dark icon (moon)');
          }
        }
        
        // Update icons based on current theme state (don't change theme here)
        updateIcons();
        
        // Add event listener
        const themeToggle = document.getElementById('theme-toggle');
        if (themeToggle) {
          themeToggle.addEventListener('click', toggleTheme);
          console.log('Theme toggle button found and listener added');
        } else {
          console.log('Theme toggle button NOT found');
        }
        
        // Mobile menu functionality
        const mobileMenuButton = document.getElementById('mobile-menu-button');
        const mobileMenu = document.getElementById('mobile-menu');

        if (mobileMenuButton && mobileMenu) {
          mobileMenuButton.addEventListener('click', function() {
            mobileMenu.classList.toggle('hidden');
          });
        }

        // Mobile dropdown functionality
        function setupMobileDropdown(toggleId, menuId, iconId) {
          const toggle = document.getElementById(toggleId);
          const menu = document.getElementById(menuId);
          const icon = document.getElementById(iconId);

          if (toggle && menu && icon) {
            toggle.addEventListener('click', function() {
              menu.classList.toggle('hidden');
              icon.classList.toggle('rotate-180');
            });
          }
        }

        // Setup mobile dropdowns
        setupMobileDropdown('mobile-stores-toggle', 'mobile-stores-menu', 'mobile-stores-icon');
        setupMobileDropdown('mobile-categories-toggle', 'mobile-categories-menu', 'mobile-categories-icon');
        setupMobileDropdown('mobile-deals-toggle', 'mobile-deals-menu', 'mobile-deals-icon');
      });
    </script>

    <style>
      /* Smoke Animation CSS */
      .smoke-container {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: 1;
        overflow: hidden;
      }

      .smoke {
        position: absolute;
        width: 400px;
        height: 400px;
        background: radial-gradient(circle, rgba(255,255,255,0.3) 0%, rgba(255,255,255,0.15) 20%, rgba(255,255,255,0.08) 40%, rgba(255,255,255,0.03) 60%, transparent 80%);
        border-radius: 50%;
        opacity: 0;
        animation-timing-function: ease-out;
        animation-iteration-count: infinite;
        filter: blur(25px);
      }

      .smoke1 {
        left: -200px;
        top: 85%;
        animation: smokeFlow1 45s infinite;
        animation-delay: 0s;
      }

      .smoke2 {
        left: -250px;
        top: 90%;
        animation: smokeFlow2 50s infinite;
        animation-delay: 8s;
        transform: scale(0.7);
      }

      .smoke3 {
        left: -180px;
        top: 80%;
        animation: smokeFlow3 48s infinite;
        animation-delay: 16s;
        transform: scale(1.1);
      }

      .smoke4 {
        left: -300px;
        top: 95%;
        animation: smokeFlow4 42s infinite;
        animation-delay: 24s;
        transform: scale(0.9);
      }

      .smoke5 {
        left: -220px;
        top: 88%;
        animation: smokeFlow5 55s infinite;
        animation-delay: 32s;
        transform: scale(1.3);
      }

      @keyframes smokeFlow1 {
        0% {
          left: -300px;
          opacity: 0;
          transform: translateY(0) scale(0.3) rotate(0deg);
        }
        15% {
          opacity: 0.4;
          transform: translateY(-50px) scale(0.6) rotate(15deg);
        }
        30% {
          opacity: 0.7;
          transform: translateY(-120px) scale(0.9) rotate(45deg);
        }
        50% {
          opacity: 0.8;
          transform: translateY(-200px) scale(1.3) rotate(90deg);
        }
        70% {
          opacity: 0.6;
          transform: translateY(-300px) scale(1.8) rotate(150deg);
        }
        85% {
          opacity: 0.3;
          transform: translateY(-400px) scale(2.5) rotate(200deg);
        }
        100% {
          left: 120%;
          opacity: 0;
          transform: translateY(-500px) scale(3.5) rotate(270deg);
        }
      }

      @keyframes smokeFlow2 {
        0% {
          left: -350px;
          opacity: 0;
          transform: translateY(0) scale(0.2) rotate(0deg);
        }
        20% {
          opacity: 0.3;
          transform: translateY(-80px) scale(0.5) rotate(25deg);
        }
        35% {
          opacity: 0.6;
          transform: translateY(-160px) scale(0.8) rotate(60deg);
        }
        55% {
          opacity: 0.7;
          transform: translateY(-280px) scale(1.2) rotate(120deg);
        }
        75% {
          opacity: 0.5;
          transform: translateY(-420px) scale(1.9) rotate(180deg);
        }
        90% {
          opacity: 0.2;
          transform: translateY(-580px) scale(2.8) rotate(240deg);
        }
        100% {
          left: 120%;
          opacity: 0;
          transform: translateY(-700px) scale(3.8) rotate(300deg);
        }
      }

      @keyframes smokeFlow3 {
        0% {
          left: -280px;
          opacity: 0;
          transform: translateY(0) scale(0.4) rotate(0deg);
        }
        18% {
          opacity: 0.35;
          transform: translateY(-90px) scale(0.7) rotate(30deg);
        }
        40% {
          opacity: 0.65;
          transform: translateY(-190px) scale(1.0) rotate(75deg);
        }
        60% {
          opacity: 0.75;
          transform: translateY(-320px) scale(1.5) rotate(135deg);
        }
        78% {
          opacity: 0.45;
          transform: translateY(-480px) scale(2.2) rotate(200deg);
        }
        92% {
          opacity: 0.15;
          transform: translateY(-650px) scale(3.1) rotate(260deg);
        }
        100% {
          left: 120%;
          opacity: 0;
          transform: translateY(-780px) scale(4.0) rotate(320deg);
        }
      }

      @keyframes smokeFlow4 {
        0% {
          left: -320px;
          opacity: 0;
          transform: translateY(0) scale(0.25) rotate(0deg);
        }
        25% {
          opacity: 0.4;
          transform: translateY(-100px) scale(0.6) rotate(40deg);
        }
        45% {
          opacity: 0.7;
          transform: translateY(-220px) scale(0.95) rotate(85deg);
        }
        65% {
          opacity: 0.8;
          transform: translateY(-360px) scale(1.4) rotate(140deg);
        }
        80% {
          opacity: 0.5;
          transform: translateY(-520px) scale(2.0) rotate(190deg);
        }
        95% {
          opacity: 0.2;
          transform: translateY(-700px) scale(2.9) rotate(250deg);
        }
        100% {
          left: 120%;
          opacity: 0;
          transform: translateY(-820px) scale(3.6) rotate(290deg);
        }
      }

      @keyframes smokeFlow5 {
        0% {
          left: -400px;
          opacity: 0;
          transform: translateY(0) scale(0.35) rotate(0deg);
        }
        22% {
          opacity: 0.3;
          transform: translateY(-70px) scale(0.65) rotate(35deg);
        }
        42% {
          opacity: 0.6;
          transform: translateY(-170px) scale(1.1) rotate(80deg);
        }
        62% {
          opacity: 0.75;
          transform: translateY(-300px) scale(1.7) rotate(145deg);
        }
        80% {
          opacity: 0.55;
          transform: translateY(-460px) scale(2.4) rotate(210deg);
        }
        95% {
          opacity: 0.25;
          transform: translateY(-640px) scale(3.2) rotate(275deg);
        }
        100% {
          left: 120%;
          opacity: 0;
          transform: translateY(-800px) scale(4.2) rotate(360deg);
        }
      }

      /* Dark mode adjustments */
      .dark .smoke {
        background: radial-gradient(circle, rgba(200,200,200,0.3) 0%, rgba(150,150,150,0.15) 30%, rgba(100,100,100,0.08) 50%, transparent 70%);
      }

      /* Better dropdown hover behavior */
      .dropdown-group {
        position: relative;
      }

      .dropdown-group:hover .dropdown-menu {
        opacity: 1;
        visibility: visible;
        transform: translateY(0);
        transition-delay: 0ms;
      }

      .dropdown-menu {
        opacity: 0;
        visibility: hidden;
        transform: translateY(-10px);
        transition: all 300ms ease-in-out;
        transition-delay: 150ms;
      }

      /* Add invisible bridge to prevent dropdown from closing */
      .dropdown-group::before {
        content: '';
        position: absolute;
        top: 100%;
        left: 0;
        right: 0;
        height: 8px;
        z-index: 199;
      }

      /* Keep dropdown open when hovering the menu itself */
      .dropdown-menu:hover {
        opacity: 1;
        visibility: visible;
        transform: translateY(0);
        transition-delay: 0ms;
      }

      /* Force dark mode styles to work */
      html.dark {
        color-scheme: dark;
      }

      html.dark body {
        background-color: rgb(17 24 39) !important; /* gray-900 */
        color: rgb(243 244 246) !important; /* gray-100 */
      }

      html:not(.dark) body {
        background-color: rgb(249 250 251) !important; /* gray-50 */
        color: rgb(17 24 39) !important; /* gray-900 */
      }

      /* Debug: Visual indicator for dark mode */
      html.dark::before {
        content: "üåô DARK MODE";
        position: fixed;
        top: 10px;
        right: 10px;
        background: rgba(0,0,0,0.8);
        color: white;
        padding: 5px 10px;
        border-radius: 5px;
        z-index: 9999;
        font-size: 12px;
      }

      html:not(.dark)::before {
        content: "‚òÄÔ∏è LIGHT MODE";
        position: fixed;
        top: 10px;
        right: 10px;
        background: rgba(255,255,255,0.8);
        color: black;
        padding: 5px 10px;
        border-radius: 5px;
        z-index: 9999;
        font-size: 12px;
        border: 1px solid #ccc;
      }
    </style>
  </body>
</html>