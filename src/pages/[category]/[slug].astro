---
import Layout from '../../layouts/Layout.astro';
import { Image } from 'astro:assets';

const API_BASE = 'https://mintdealsbackend-production.up.railway.app/api';

// Category icon mapping
function getCategoryIcon(slug: string) {
  const icons: Record<string, string> = {
    'flower': 'üåø',
    'pre-rolls': 'üö¨',
    'vaporizers': 'üí®',
    'concentrates': 'üçØ',
    'edibles': 'üç≠',
    'topicals': 'üß¥',
    'cartridges': 'üñäÔ∏è',
    'tinctures': 'üíß'
  };
  return icons[slug] || 'üåø';
}

export async function getStaticPaths() {
  const categories = ['flower', 'pre-rolls', 'vaporizers', 'concentrates', 'edibles', 'topicals', 'cartridges'];
  const states = ['florida', 'california', 'colorado', 'nevada', 'arizona', 'massachusetts', 'michigan', 'illinois'];

  const paths = [];

  categories.forEach(category => {
    states.forEach(state => {
      paths.push({
        params: {
          category: category,
          slug: `${category}-in-${state}`
        }
      });
    });
  });

  return paths;
}

const { category, slug } = Astro.params;

// Extract state from slug
const statePart = slug?.split('-in-')[1] || '';
const stateName = statePart ? statePart.replace(/-/g, ' ').replace(/\b\w/g, (l: string) => l.toUpperCase()) : '';
const categoryName = category ? category.replace(/-/g, ' ').replace(/\b\w/g, (l: string) => l.toUpperCase()) : '';

const pageTitle = `${categoryName} in ${stateName} | Cannabis Products`;
const categoryIcon = getCategoryIcon(category);
const description = `Find ${categoryName.toLowerCase()} products and dispensaries in ${stateName}.`;

// Fetch stores in this state
let stores: any[] = [];
try {
  const response = await fetch(`${API_BASE}/stores?filters[state][$eq]=${stateName}&populate=*&pagination[pageSize]=100`);
  if (response.ok) {
    const data = await response.json();
    stores = data?.data || [];
  }
} catch (error) {
  console.error('Error fetching stores:', error);
}

// Fetch products for this category
let products: any[] = [];
try {
  const response = await fetch(`${API_BASE}/products?filters[category][slug][$eq]=${category}&populate=*&pagination[pageSize]=20`);
  if (response.ok) {
    const data = await response.json();
    products = data?.data || [];
  }
} catch (error) {
  console.error('Error fetching products:', error);
}
---

<style>
  body {
    margin: 0;
    padding: 0;
  }
  .video-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    overflow: hidden;
  }
  .video-background::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: linear-gradient(to top,  rgba(41, 163, 41, 0.35), rgba(51, 204, 51, 0.3), rgba(92, 214, 92, 0.25), rgba(133, 224, 133, 0.2), rgba(194, 240, 194, 0.15), rgba(235, 250, 235, 0.1), rgba(255, 255, 255, 0.08), rgba(255, 255, 255, 0.06), rgba(255, 255, 255, 0.04), rgba(255, 255, 255, 0.02));
    mix-blend-mode: color;
    pointer-events: none;
    z-index: 1;
  }
  .video-background video {
    object-fit: cover;
    height: 100%;
    width: 100%;
  }
  .content-wrapper {
    position: relative;
    z-index: 1;
  }
</style>

<Layout title={pageTitle} description={description}>
  <!-- Video Background -->
  <div class="video-background">
    <video autoplay loop muted playsinline>
      <source src="https://video.wixstatic.com/video/d47472_58cce06729c54ccb935886c4b3647274/1080p/mp4/file.mp4" type="video/mp4">
    </video>
  </div>

  <!-- Content Wrapper -->
  <div class="content-wrapper">

  <!-- Breadcrumb Navigation -->
  <nav class="bg-black bg-opacity-60 py-4">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex items-center space-x-2 text-sm">
        <a href="/" class="text-yellow-400 hover:text-yellow-300">Home</a>
        <span class="text-green-300">/</span>
        <a href="/categories" class="text-yellow-400 hover:text-yellow-300">Categories</a>
        <span class="text-green-300">/</span>
        <a href={`/${category}`} class="text-yellow-400 hover:text-yellow-300">{categoryName}</a>
        <span class="text-green-300">/</span>
        <span class="text-white">{stateName}</span>
      </div>
    </div>
  </nav>

  <!-- Hero Section -->
  <section class="relative py-24 md:py-32 text-white bg-black bg-opacity-70">
    <div class="relative z-10 max-w-7xl mx-auto px-6 sm:px-8 lg:px-12 text-center">
      <div class="text-8xl md:text-9xl mb-10">{categoryIcon}</div>
      <h1 class="mb-10 text-5xl font-bold md:text-8xl px-4">
        <span class="inline-block pb-4 bg-gradient-to-r from-yellow-400 to-orange-500 bg-clip-text text-transparent" style="padding-bottom: 1rem; line-height: 1.6; letter-spacing: -0.02em;">
          {categoryName} in {stateName}
        </span>
      </h1>
      <p class="text-xl md:text-2xl text-white max-w-3xl mx-auto mb-12 px-4 font-normal" style="line-height: 1.8; text-shadow: 2px 2px 4px rgba(0,0,0,0.5); text-align: center;">
        {description}
      </p>
      <div class="flex flex-col sm:flex-row gap-8 justify-center px-4">
        <a href="#stores" class="inline-flex items-center justify-center px-10 py-5 text-xl font-bold text-white transition-all transform rounded-xl shadow-2xl bg-gradient-to-r from-yellow-400 to-orange-500 hover:from-yellow-500 hover:to-orange-600 hover:scale-110">
          üè™ Find Dispensaries
        </a>
        <a href="#products" class="inline-flex items-center justify-center px-10 py-5 text-xl font-bold text-white transition-all transform rounded-xl shadow-2xl bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 hover:scale-110">
          üåø View Products
        </a>
      </div>
    </div>
  </section>

  <!-- Featured Products Section -->
  <section id="products" class="bg-black bg-opacity-95 py-24">
    <div class="max-w-7xl mx-auto px-6 sm:px-8 lg:px-12">
      <div class="text-center mb-20">
        <h2 class="mb-8 text-5xl font-bold md:text-7xl px-4">
          <span class="inline-block pb-4 bg-gradient-to-r from-yellow-400 to-orange-500 bg-clip-text text-transparent" style="padding-bottom: 1rem; line-height: 1.6; letter-spacing: -0.02em;">
            {categoryName} Products
          </span>
        </h2>
        <p class="text-lg md:text-xl text-white mt-8 max-w-2xl mx-auto px-4 font-normal" style="line-height: 1.8; text-align: center;">
          Browse popular {categoryName.toLowerCase()} products available in {stateName}
        </p>
      </div>

      {products.length > 0 ? (
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
          {products.map((product: any) => {
            const productName = product.name || product.Name || 'Product';
            const productDescription = product.description || product.Description || '';
            const productImage = product.image?.url || product.Image?.url;
            const imageUrl = productImage ?
              (productImage.startsWith('http') ? productImage : `${API_BASE}${productImage}`) :
              null;

            return (
              <div class="bg-black border-2 border-green-500 rounded-lg overflow-hidden hover:shadow-lg hover:shadow-yellow-400/30 transition-all duration-300 hover:scale-105">
                {imageUrl ? (
                  <Image
                    src={imageUrl}
                    alt={productName}
                    width={400}
                    height={192}
                    class="w-full h-48 object-cover"
                    loading="lazy"
                    format="webp"
                  />
                ) : (
                  <div class="w-full h-48 bg-gradient-to-br from-green-600 to-green-700 flex items-center justify-center">
                    <span class="text-6xl">{categoryIcon}</span>
                  </div>
                )}

                <div class="p-6">
                  <h3 class="text-lg font-bold text-white mb-3 line-clamp-2" style="line-height: 1.5; text-align: center;">
                    {productName}
                  </h3>

                  {productDescription && (
                    <p class="text-sm text-green-300 mb-4 line-clamp-3" style="line-height: 1.6; text-align: center;">
                      {productDescription}
                    </p>
                  )}

                  <div class="flex justify-center">
                    <span class="inline-block bg-gradient-to-r from-yellow-400 to-orange-500 text-white px-4 py-2 rounded-full text-sm font-bold">
                      {categoryName}
                    </span>
                  </div>
                </div>
              </div>
            );
          })}
        </div>
      ) : (
        <div class="text-center py-12">
          <div class="max-w-md p-8 mx-auto bg-black border-2 border-green-500 rounded-lg">
            <div class="text-6xl mb-6">{categoryIcon}</div>
            <h3 class="mb-3 text-xl font-bold text-yellow-400" style="line-height: 1.4;">No Products Available</h3>
            <p class="text-base text-green-300" style="line-height: 1.6;">Check back soon for {categoryName.toLowerCase()} products!</p>
          </div>
        </div>
      )}
    </div>
  </section>

  <!-- Dispensaries Section -->
  <section id="stores" class="bg-gradient-to-b from-green-900/40 to-black/60 py-24">
    <div class="max-w-7xl mx-auto px-6 sm:px-8 lg:px-12">
      <div class="text-center mb-20">
        <h2 class="mb-8 text-5xl font-bold md:text-7xl px-4">
          <span class="inline-block pb-4 bg-gradient-to-r from-yellow-400 to-orange-500 bg-clip-text text-transparent" style="padding-bottom: 1rem; line-height: 1.6; letter-spacing: -0.02em;">
            Dispensaries in {stateName}
          </span>
        </h2>
        <p class="text-lg md:text-xl text-white mt-8 max-w-2xl mx-auto px-4 font-normal" style="line-height: 1.8; text-align: center;">
          Licensed dispensaries carrying {categoryName.toLowerCase()} products
        </p>
      </div>

      {stores.length > 0 ? (
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {stores.map((store: any) => (
            <div class="bg-black border-2 border-green-500 rounded-lg p-8 hover:shadow-lg hover:shadow-yellow-400/20 transition-all hover:scale-105">
              <div class="flex flex-col items-center text-center mb-6">
                <div class="bg-gradient-to-r from-yellow-400 to-orange-500 text-white rounded-lg w-16 h-16 flex items-center justify-center mb-4 text-3xl flex-shrink-0">
                  üè™
                </div>
                <h3 class="text-xl font-bold text-white" style="line-height: 1.4;">{store.name}</h3>
              </div>

              <div class="space-y-3 text-base text-white mb-6">
                <div class="flex items-center justify-center">
                  <span class="text-yellow-400 mr-2 text-xl">üìç</span>
                  <span>{store.city}, {store.state}</span>
                </div>
                {store.phone && (
                  <div class="flex items-center justify-center">
                    <span class="text-yellow-400 mr-2 text-xl">üìû</span>
                    <span>{store.phone}</span>
                  </div>
                )}
              </div>

              <div class="mt-6 pt-6 border-t-2 border-green-500 text-center">
                <a
                  href={`/location/${store.slug}`}
                  class="inline-block font-bold text-white transition-all transform rounded-lg shadow-lg bg-gradient-to-r from-yellow-400 to-orange-500 hover:from-yellow-500 hover:to-orange-600 px-6 py-3 text-base hover:scale-105"
                >
                  View Store Details
                </a>
              </div>
            </div>
          ))}
        </div>
      ) : (
        <div class="text-center py-12">
          <div class="max-w-md p-8 mx-auto bg-black border-2 border-green-500 rounded-lg">
            <div class="text-6xl mb-6">üè™</div>
            <h3 class="mb-3 text-xl font-bold text-yellow-400" style="line-height: 1.4;">Finding Dispensaries</h3>
            <p class="text-base text-green-300" style="line-height: 1.6;">We're updating our dispensary database for {stateName}. Check back soon!</p>
          </div>
        </div>
      )}
    </div>
  </section>

  <!-- Related States -->
  <section class="bg-black bg-opacity-90 py-24">
    <div class="max-w-7xl mx-auto px-6 sm:px-8 lg:px-12">
      <div class="text-center mb-20">
        <h2 class="mb-8 text-5xl font-bold md:text-7xl px-4">
          <span class="inline-block pb-4 bg-gradient-to-r from-yellow-400 to-orange-500 bg-clip-text text-transparent" style="padding-bottom: 1rem; line-height: 1.6; letter-spacing: -0.02em;">
            {categoryName} in Other States
          </span>
        </h2>
        <p class="text-lg md:text-xl text-white mt-8 max-w-2xl mx-auto px-4 font-normal" style="line-height: 1.8; text-align: center;">
          Explore {categoryName.toLowerCase()} products in other locations
        </p>
      </div>

      <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-7 gap-6">
        {['florida', 'california', 'colorado', 'nevada', 'arizona', 'massachusetts', 'michigan', 'illinois']
          .filter(state => state !== statePart)
          .slice(0, 7)
          .map(relatedState => {
            const relatedStateName = relatedState.replace(/-/g, ' ').replace(/\b\w/g, (l: string) => l.toUpperCase());
            return (
              <a href={`/${category}/${category}-in-${relatedState}`} class="bg-black border-2 border-green-500 p-6 rounded-xl text-center hover:shadow-lg hover:shadow-yellow-400/30 hover:scale-105 hover:-translate-y-1 transition-all duration-200 group">
                <div class="text-5xl mb-4 group-hover:scale-110 transition-transform duration-200">
                  üìç
                </div>
                <h3 class="text-lg font-bold text-white group-hover:text-yellow-400 transition-colors" style="line-height: 1.3;">
                  {relatedStateName}
                </h3>
              </a>
            );
          })
        }
      </div>
    </div>
  </section>

  </div> <!-- Close content-wrapper -->
</Layout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* Image styling - add border and shadow to all images */
  img {
    border: 1px solid #000 !important;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.5) !important;
  }
</style>
