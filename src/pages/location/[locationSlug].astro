---
export const prerender = true;

const API_BASE = 'https://mintdealsbackend-production.up.railway.app/api';

export async function getStaticPaths() {
  try {
    const response = await fetch(`${API_BASE}/stores?pagination[pageSize]=100`);
    const data = await response.json();

    if (data?.data && Array.isArray(data.data)) {
      return data.data.map((store: any) => ({
        params: { locationSlug: store.slug || store.documentId },
        props: { store }
      }));
    }
  } catch (error) {
    console.error('Error fetching stores:', error);
  }

  // Fallback
  return [{ params: { locationSlug: 'test-location' } }];
}

import Layout from '../../layouts/Layout.astro';

const { store } = Astro.props;
const { locationSlug } = Astro.params;

const storeName = store?.name || 'Store Location';
const storeCity = store?.city || store?.address?.city || '';
const storeState = store?.state || store?.address?.state || '';
---

<Layout title={`${storeName} - Mint Cannabis`} description={`Visit ${storeName} for premium cannabis products`}>
  <div class="max-w-7xl mx-auto px-4 py-16">
    <h1 class="text-4xl font-bold text-gray-900 mb-4">
      üè™ {storeName}
    </h1>

    {(storeCity || storeState) && (
      <p class="text-xl text-gray-600 mb-8">
        üìç {storeCity}{storeCity && storeState ? ', ' : ''}{storeState}
      </p>
    )}

    {store?.description && (
      <p class="text-lg text-gray-700 mb-8">
        {store.description}
      </p>
    )}

    <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mt-8">
      {/* Contact Information */}
      {(store?.phone || store?.email || store?.address) && (
        <div class="bg-white rounded-lg shadow-md p-6">
          <h2 class="text-2xl font-bold text-gray-900 mb-4">Contact Information</h2>
          <div class="space-y-3">
            {store?.phone && (
              <div class="flex items-center">
                <span class="text-gray-600 mr-2">üìû</span>
                <a href={`tel:${store.phone}`} class="text-emerald-600 hover:text-emerald-700">
                  {store.phone}
                </a>
              </div>
            )}
            {store?.email && (
              <div class="flex items-center">
                <span class="text-gray-600 mr-2">üìß</span>
                <a href={`mailto:${store.email}`} class="text-emerald-600 hover:text-emerald-700">
                  {store.email}
                </a>
              </div>
            )}
            {(store?.address || store?.street) && (
              <div class="flex items-start">
                <span class="text-gray-600 mr-2 mt-1">üìç</span>
                <div>
                  <p class="text-gray-700">{store.address?.street || store.street || store.address}</p>
                  <p class="text-gray-700">
                    {storeCity}{storeCity && storeState ? ', ' : ''}{storeState} {store.zip_code || store.address?.zipCode || ''}
                  </p>
                </div>
              </div>
            )}
          </div>
        </div>
      )}

      {/* Hours */}
      {store?.hours && store.hours.length > 0 && (
        <div class="bg-white rounded-lg shadow-md p-6">
          <h2 class="text-2xl font-bold text-gray-900 mb-4">Hours</h2>
          <div class="space-y-2">
            {store.hours.map((hour: any) => (
              <div class="flex justify-between">
                <span class="text-gray-700 font-medium">{hour.dayOfWeek || 'Daily'}</span>
                <span class="text-gray-600">
                  {hour.is_24hour ? '24 Hours' : hour.isClosed ? 'Closed' : `${hour.openTime || ''} - ${hour.closeTime || ''}`}
                </span>
              </div>
            ))}
          </div>
        </div>
      )}
    </div>

    {(store?.latitude && store?.longitude) && (
      <div class="mt-8">
        <a
          href={`https://maps.google.com/?q=${store.latitude},${store.longitude}`}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-block bg-emerald-600 hover:bg-emerald-700 text-white px-6 py-3 rounded-lg font-semibold transition-colors"
        >
          üó∫Ô∏è Get Directions
        </a>
      </div>
    )}
  </div>
</Layout>
