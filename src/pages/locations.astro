---
import Layout from '../layouts/Layout.astro';

// Fetch stores/locations from Strapi
let storesData = [];
let apiError = null;

try {
  console.log('üöÄ Fetching stores from Strapi');

  // Using the Location content type
  const response = await fetch('http://localhost:1337/api/locations?populate=*&pagination[pageSize]=100');

  if (response.ok) {
    const data = await response.json();
    storesData = data?.data || [];
    console.log('‚úÖ Stores loaded:', storesData.length);
  } else {
    const errorData = await response.json();
    console.error('‚ùå Stores API Error:', errorData);
    apiError = errorData.error?.message || 'Failed to fetch stores';
  }
} catch (error) {
  console.error('‚ùå Error fetching stores:', error);
  apiError = error.message;
}
---

<Layout title="Store Locations - FLMintDeals" description="Find cannabis dispensary locations near you">
  <!-- Hero Section -->
  <div class="bg-gradient-to-br from-green-800 via-green-700 to-emerald-700 text-white py-16">
    <div class="px-4 sm:px-6 lg:px-8 max-w-7xl mx-auto">
      <div class="text-center">
        <h1 class="text-4xl sm:text-5xl lg:text-6xl font-bold mb-4">
          Store Locations
        </h1>
        <p class="text-xl lg:text-2xl text-green-100 max-w-3xl mx-auto">
          Find cannabis dispensaries and retailers near you
        </p>
      </div>
    </div>
  </div>

  <!-- Main Content -->
  <div class="px-4 sm:px-6 lg:px-8 max-w-7xl mx-auto py-12">
    {storesData.length === 0 ? (
      <div class="text-center py-16">
        <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/>
        </svg>
        <h3 class="mt-2 text-lg font-medium text-gray-900 dark:text-gray-100">No stores found</h3>
        <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">
          {apiError ? `Error: ${apiError}` : 'No store locations are available at this time.'}
        </p>
      </div>
    ) : (
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {storesData.map(store => (
          <div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg overflow-hidden hover:shadow-xl transition-shadow">
            {/* Store Image */}
            {store.attributes?.StoreImage?.data?.attributes?.url && (
              <img
                src={`http://localhost:1337${store.attributes.StoreImage.data.attributes.url}`}
                alt={store.attributes?.Name || store.attributes?.title}
                class="w-full h-48 object-cover"
              />
            )}

            <div class="p-6">
              <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-2">
                {store.attributes?.Name || store.attributes?.title || 'Store Name'}
              </h3>

              {/* Address */}
              {store.attributes?.Address && (
                <p class="text-gray-600 dark:text-gray-300 mb-2 flex items-start">
                  <svg class="w-5 h-5 mr-2 mt-0.5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/>
                  </svg>
                  {store.attributes.Address}
                </p>
              )}

              {/* Phone */}
              {store.attributes?.Phone && (
                <p class="text-gray-600 dark:text-gray-300 mb-2 flex items-center">
                  <svg class="w-5 h-5 mr-2 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"/>
                  </svg>
                  {store.attributes.Phone}
                </p>
              )}

              {/* Hours */}
              {store.attributes?.Hours && (
                <p class="text-gray-600 dark:text-gray-300 mb-4 flex items-start">
                  <svg class="w-5 h-5 mr-2 mt-0.5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
                  </svg>
                  {store.attributes.Hours}
                </p>
              )}

              {/* Region */}
              {store.attributes?.region?.data?.attributes?.Name && (
                <span class="inline-block bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 px-3 py-1 rounded-full text-sm font-medium mb-4">
                  {store.attributes.region.data.attributes.Name}
                </span>
              )}

              <div class="flex space-x-2">
                {/* View Details Button */}
                <a
                  href={`/stores/${store.documentId}`}
                  class="flex-1 bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg text-center font-medium transition-colors"
                >
                  View Details
                </a>

                {/* Directions Button */}
                {store.attributes?.Address && (
                  <a
                    href={`https://maps.google.com/?q=${encodeURIComponent(store.attributes.Address)}`}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-medium transition-colors"
                  >
                    Directions
                  </a>
                )}
              </div>
            </div>
          </div>
        ))}
      </div>
    )}
  </div>
</Layout>