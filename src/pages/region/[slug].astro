---
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
  const API_BASE = 'https://mintdealsbackend-production.up.railway.app/api';

  try {
    const response = await fetch(`${API_BASE}/regions?populate=*`);
    const data = await response.json();
    const regions = data?.data || [];

    return regions.map(region => {
      // Generate slug from name since API doesn't provide slug or code
      const slug = region.slug || (region.name ? region.name.toLowerCase().replace(/\s+/g, '-') : region.id.toString());

      return {
        params: { slug },
        props: { region }
      };
    });
  } catch (error) {
    console.error('Error fetching regions:', error);
    return [];
  }
}

const { region } = Astro.props;
const { slug } = Astro.params;

// Helper function to get image URL from various possible structures
function getImageUrl(imageData) {
  if (!imageData || imageData === null) return null;

  // Case 1: Strapi v4 nested structure: image.data.attributes.url
  if (imageData?.data?.attributes?.url) {
    const url = imageData.data.attributes.url;
    return url.startsWith('http') ? url : `https://mintdealsbackend-production.up.railway.app${url}`;
  }

  // Case 2: Direct image object with formats (Cloudinary or Strapi uploaded images)
  if (typeof imageData === 'object' && imageData.formats) {
    // Prefer larger formats for better quality
    if (imageData.formats.large?.url) return imageData.formats.large.url;
    if (imageData.formats.medium?.url) return imageData.formats.medium.url;
    if (imageData.formats.small?.url) return imageData.formats.small.url;
    if (imageData.formats.thumbnail?.url) return imageData.formats.thumbnail.url;
  }

  // Case 3: Direct image object with url: image.url
  if (typeof imageData === 'object' && imageData.url) {
    const url = imageData.url;
    return url.startsWith('http') ? url : `https://mintdealsbackend-production.up.railway.app${url}`;
  }

  // Case 4: String URL directly
  if (typeof imageData === 'string') {
    return imageData.startsWith('http') ? imageData : `https://mintdealsbackend-production.up.railway.app${imageData}`;
  }

  return null;
}

// Get region image URL - check both Image and image fields
const regionImageUrl = region ? (getImageUrl(region.Image) || getImageUrl(region.image) || null) : null;

// Fetch stores for this region
let stores = [];
const API_BASE = 'https://mintdealsbackend-production.up.railway.app/api';

if (region) {
  try {
    const storesResponse = await fetch(`${API_BASE}/stores?populate=*&pagination[pageSize]=500`);
    if (storesResponse.ok) {
      const storesData = await storesResponse.json();
      const allStores = storesData?.data || [];

      // Filter stores by this region
      stores = allStores.filter(store => {
        const storeRegionId = typeof store.region === 'object' ? store.region?.id : store.region;
        return storeRegionId === region.id;
    }).map(store => ({
      id: store.id,
      name: store.name || 'Unnamed Store',
      slug: store.slug || store.documentId,
      description: store.description,
      address: store.address?.street || store.address,
      city: store.address?.city || store.city || 'Unknown City',
      state: store.address?.state || store.state || 'Unknown State',
      zipCode: store.address?.zipCode || store.zip_code,
      phone: store.phone,
      email: store.email,
      latitude: store.latitude,
      longitude: store.longitude,
      storeImage: store.store_image || store.hero_image ? {
        url: (store.store_image?.url || store.hero_image?.url) ?
          ((store.store_image?.url || store.hero_image?.url).startsWith('http') ?
            (store.store_image?.url || store.hero_image?.url) :
            `https://mintdealsbackend-production.up.railway.app${store.store_image?.url || store.hero_image?.url}`) : null
      } : null
    }));
    }
  } catch (error) {
    console.error('Error fetching stores:', error);
  }
}

// Group stores by city
const citiesMap = {};
stores.forEach(store => {
  const city = store.city;
  if (!citiesMap[city]) {
    citiesMap[city] = [];
  }
  citiesMap[city].push(store);
});

const cities = Object.entries(citiesMap).map(([name, locations]) => ({
  name,
  locations
}));
---

<style>
  .video-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    overflow: hidden;
    pointer-events: none;
    z-index: 1;
  }
  .video-background video {
    object-fit: cover;
    height: 100%;
    width: 100%;
  }
  .content-wrapper {
    position: relative;
    z-index: 1;
    background: linear-gradient(to bottom, rgba(0,0,0,0.3), rgba(0,0,0,0.5));
  }
  .hero-section {
    min-height: 40vh;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 3rem 0;
  }

  @media (min-width: 1024px) {
    .hero-section {
      min-height: 50vh;
      padding: 4rem 0;
    }
  }
</style>

<Layout title={`${region.name} - Mint Cannabis Locations`} description={`Find Mint Cannabis dispensaries in ${region.name}`}>
  <!-- Video Background -->
  <div class="video-background">
    <video autoplay loop muted playsinline>
      <source src="https://video.wixstatic.com/video/d47472_58cce06729c54ccb935886c4b3647274/1080p/mp4/file.mp4" type="video/mp4">
    </video>
  </div>

  <!-- Content Wrapper -->
  <div class="content-wrapper">
    <!-- Hero Section -->
    <div class="text-white hero-section">
      <div class="px-4 mx-auto sm:px-6 lg:px-8 max-w-[1600px]">
        <div class="text-center">
          <!-- Region Image -->
          {regionImageUrl && (
            <div class="mb-8">
              <img
                src={regionImageUrl}
                alt={region.name}
                class="w-48 h-48 mx-auto rounded-full object-cover border-4 border-yellow-400/30 drop-shadow-2xl"
              />
            </div>
          )}

          <h1 class="mb-4 text-4xl font-bold text-white md:text-6xl drop-shadow-2xl">
            üìç {region.name}
          </h1>
          <p class="max-w-2xl mx-auto mb-6 text-lg text-yellow-400 md:text-xl drop-shadow-lg">
            {region.description || `Premium cannabis dispensaries in ${region.name}`}
          </p>
          <div class="flex flex-wrap justify-center gap-4 mb-8">
            <a href="/regions" class="px-6 py-2.5 text-base font-semibold text-white transition-all transform rounded-lg shadow-lg bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800 hover:scale-105">
              ‚Üê All Regions
            </a>
            <a href="/stores" class="px-6 py-2.5 text-base font-semibold text-black transition-all transform rounded-lg shadow-lg bg-gradient-to-r from-yellow-400 to-yellow-500 hover:from-yellow-500 hover:to-yellow-600 hover:scale-105">
              üè™ All Stores
            </a>
          </div>
        </div>
      </div>
    </div>

    <!-- Quick Stats Bar -->
    <div class="bg-gradient-to-r from-green-800 via-green-900 to-green-800 py-5">
      <div class="px-4 mx-auto sm:px-6 lg:px-8 max-w-[1600px]">
        <div class="grid grid-cols-2 gap-6 text-center md:grid-cols-3">
          <div class="text-white">
            <div class="text-xl font-bold text-yellow-400">{stores.length}</div>
            <div class="text-xs text-green-200">Total Locations</div>
          </div>
          <div class="text-white">
            <div class="text-xl font-bold text-yellow-400">{cities.length}</div>
            <div class="text-xs text-green-200">Cities</div>
          </div>
          <div class="text-white">
            <div class="text-xl font-bold text-yellow-400">{region.code}</div>
            <div class="text-xs text-green-200">Region Code</div>
          </div>
        </div>
      </div>
    </div>

    <!-- Main Content -->
    <div class="bg-black py-16">
      <div class="px-4 sm:px-6 lg:px-8 max-w-[1600px] mx-auto">

        {stores.length === 0 ? (
          <div class="text-center py-16">
            <div class="bg-gray-900 rounded-lg p-12 border border-green-700">
              <h3 class="text-2xl font-bold text-white mb-4">No stores found</h3>
              <p class="text-gray-300 mb-6">
                We don't have any stores in {region.name} yet, but check back soon!
              </p>
              <a href="/stores" class="inline-block bg-gradient-to-r from-yellow-500 to-yellow-600 hover:from-yellow-600 hover:to-yellow-700 text-black px-6 py-3 rounded-lg font-semibold transition-all shadow-lg">
                View All Stores
              </a>
            </div>
          </div>
        ) : (
          <div>
            <!-- Cities -->
            {cities.map(city => (
              <div class="mb-12">
                <div class="bg-gradient-to-r from-green-900 via-green-800 to-yellow-700 rounded-2xl p-6 mb-6">
                  <h2 class="text-3xl font-bold text-white mb-2">{city.name}</h2>
                  <p class="text-green-200">{city.locations.length} location{city.locations.length !== 1 ? 's' : ''}</p>
                </div>

                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                  {city.locations.map((store, index) => (
                    <div class="bg-gray-900 rounded-lg shadow-lg border border-green-700 hover:border-yellow-500 transition-all overflow-hidden">
                      {store.storeImage?.url ? (
                        <img src={store.storeImage.url} alt={store.name} class="w-full h-48 object-cover" />
                      ) : (
                        <div class={`w-full h-48 bg-gradient-to-br ${index % 2 === 0 ? 'from-green-600 to-green-800' : 'from-yellow-600 to-yellow-800'} flex items-center justify-center`}>
                          <div class="text-white text-center">
                            <div class="text-4xl font-bold mb-2">üè™</div>
                            <div class="text-lg font-semibold">{store.name}</div>
                          </div>
                        </div>
                      )}

                      <div class="p-6">
                        <h3 class="text-xl font-bold text-white mb-3">{store.name}</h3>

                        {store.description && (
                          <p class="text-gray-300 mb-4 line-clamp-2">{store.description}</p>
                        )}

                        <div class="space-y-3 mb-6">
                          <div class="flex items-start text-gray-300">
                            <svg class="w-5 h-5 mr-3 text-yellow-500 flex-shrink-0 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                              <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"></path>
                            </svg>
                            <div class="text-sm">
                              <div class="font-medium">{store.address}</div>
                              <div class="text-gray-400">{store.city}, {store.state} {store.zipCode}</div>
                            </div>
                          </div>

                          {store.phone && (
                            <div class="flex items-center text-gray-300">
                              <svg class="w-5 h-5 mr-3 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                                <path d="M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z"></path>
                              </svg>
                              <a href={`tel:${store.phone}`} class="text-sm hover:text-yellow-400 transition-colors">
                                {store.phone}
                              </a>
                            </div>
                          )}
                        </div>

                        <div class="flex gap-3">
                          <a
                            href={`/location/${store.slug}`}
                            class="flex-1 bg-gradient-to-r from-yellow-500 to-yellow-600 hover:from-yellow-600 hover:to-yellow-700 text-black font-semibold py-3 px-4 rounded-lg transition-all text-center shadow-lg"
                          >
                            View Store
                          </a>
                          {store.latitude && store.longitude && (
                            <a
                              href={`https://maps.google.com/?q=${store.latitude},${store.longitude}`}
                              target="_blank"
                              class="px-4 py-3 border-2 border-green-600 text-green-400 hover:bg-green-600 hover:text-white rounded-lg transition-all font-semibold"
                            >
                              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                              </svg>
                            </a>
                          )}
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            ))}
          </div>
        )}

        <!-- CTA Section -->
        <div class="bg-gradient-to-r from-green-900 via-green-800 to-yellow-700 rounded-3xl p-12 text-center text-white shadow-lg mt-16">
          <h3 class="text-3xl font-bold mb-4">Explore More Locations</h3>
          <p class="text-xl text-green-100 mb-8 max-w-2xl mx-auto">
            Check out our other regions and find the perfect Mint Cannabis location near you
          </p>
          <div class="flex flex-col sm:flex-row gap-4 justify-center">
            <a href="/regions" class="bg-yellow-500 text-black hover:bg-yellow-600 font-semibold py-3 px-8 rounded-xl transition-colors duration-300 shadow-lg">
              View All Regions
            </a>
            <a href="/all-store-specials" class="border-2 border-yellow-400 text-white hover:bg-yellow-400 hover:text-black font-semibold py-3 px-8 rounded-xl transition-colors duration-300">
              Browse Specials
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>
