---
import Layout from '../../layouts/Layout.astro';

const API_BASE = 'https://mintdealsbackend-production.up.railway.app/api';

export async function getStaticPaths() {
  try {
    const response = await fetch(`${API_BASE}/stores?pagination[pageSize]=100&populate=*`);
    const data = await response.json();

    if (data?.data && Array.isArray(data.data)) {
      return data.data.map((store: any) => ({
        params: { id: store.documentId || store.id.toString() },
        props: { store }
      }));
    }
  } catch (error) {
    console.error('Error fetching stores:', error);
  }

  // Fallback
  return [{ params: { id: 'test-store-1' } }];
}

const { store } = Astro.props;
const { id } = Astro.params;

const storeName = store?.name || store?.Name || 'Store';
const storeCity = store?.city || store?.City || '';
const storeState = store?.state || store?.State || '';
const storeAddress = store?.address || store?.Address || '';
const storePhone = store?.phone || store?.Phone || '';
const storeEmail = store?.email || store?.Email || '';
const storeDescription = store?.description || store?.Description || '';

// Fetch products for this store
let products: any[] = [];
if (store?.id) {
  try {
    const response = await fetch(`${API_BASE}/products?filters[stores][id][$eq]=${store.id}&populate=*&pagination[pageSize]=50`);
    if (response.ok) {
      const data = await response.json();
      products = data?.data || [];
    }
  } catch (error) {
    console.error('Error fetching products:', error);
  }
}
---

<Layout title={`${storeName} - Store Details`} description={`Visit ${storeName} in ${storeCity}, ${storeState}`}>
  <!-- Hero Section -->
  <section class="bg-gradient-to-r from-emerald-600 via-emerald-700 to-teal-700 text-white py-16">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center">
        <div class="text-6xl mb-6">üè™</div>
        <h1 class="text-4xl md:text-6xl font-bold mb-4">
          {storeName}
        </h1>
        {(storeCity || storeState) && (
          <p class="text-xl md:text-2xl text-emerald-100">
            üìç {storeCity}{storeCity && storeState ? ', ' : ''}{storeState}
          </p>
        )}
      </div>
    </div>
  </section>

  <!-- Main Content -->
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">

      <!-- Store Info -->
      <div class="lg:col-span-2 space-y-8">

        {/* Description */}
        {storeDescription && (
          <div class="bg-white rounded-lg shadow-md p-6">
            <h2 class="text-2xl font-bold text-gray-900 mb-4">About This Location</h2>
            <p class="text-gray-700 leading-relaxed">
              {storeDescription}
            </p>
          </div>
        )}

        {/* Products */}
        {products.length > 0 && (
          <div class="bg-white rounded-lg shadow-md p-6">
            <h2 class="text-2xl font-bold text-gray-900 mb-6">
              Available Products ({products.length})
            </h2>
            <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
              {products.slice(0, 8).map((product: any) => {
                const productName = product.name || product.Name || 'Product';
                const productCategory = product.category?.name || product.category?.Name || '';

                return (
                  <div class="border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow">
                    <h3 class="font-semibold text-gray-900 mb-2">
                      {productName}
                    </h3>
                    {productCategory && (
                      <span class="inline-block bg-emerald-100 text-emerald-800 px-2 py-1 rounded text-xs font-medium">
                        {productCategory}
                      </span>
                    )}
                  </div>
                );
              })}
            </div>
            {products.length > 8 && (
              <p class="mt-4 text-center text-gray-600">
                + {products.length - 8} more products available
              </p>
            )}
          </div>
        )}
      </div>

      <!-- Sidebar -->
      <div class="lg:col-span-1">
        <div class="sticky top-4 space-y-6">

          {/* Contact Card */}
          <div class="bg-white rounded-lg shadow-md p-6">
            <h3 class="text-xl font-bold text-gray-900 mb-4">Contact Information</h3>
            <div class="space-y-3">
              {storeAddress && (
                <div class="flex items-start">
                  <span class="text-gray-600 mr-2 mt-1">üìç</span>
                  <div>
                    <p class="text-gray-700">{storeAddress}</p>
                    <p class="text-gray-700">
                      {storeCity}{storeCity && storeState ? ', ' : ''}{storeState}
                    </p>
                  </div>
                </div>
              )}

              {storePhone && (
                <div class="flex items-center">
                  <span class="text-gray-600 mr-2">üìû</span>
                  <a href={`tel:${storePhone}`} class="text-emerald-600 hover:text-emerald-700">
                    {storePhone}
                  </a>
                </div>
              )}

              {storeEmail && (
                <div class="flex items-center">
                  <span class="text-gray-600 mr-2">üìß</span>
                  <a href={`mailto:${storeEmail}`} class="text-emerald-600 hover:text-emerald-700">
                    {storeEmail}
                  </a>
                </div>
              )}
            </div>
          </div>

          {/* Hours */}
          {store?.hours && store.hours.length > 0 && (
            <div class="bg-white rounded-lg shadow-md p-6">
              <h3 class="text-xl font-bold text-gray-900 mb-4">Store Hours</h3>
              <div class="space-y-2">
                {store.hours.map((hour: any) => (
                  <div class="flex justify-between text-sm">
                    <span class="text-gray-700 font-medium">{hour.dayOfWeek || 'Daily'}</span>
                    <span class="text-gray-600">
                      {hour.is_24hour ? '24 Hours' : hour.isClosed ? 'Closed' : `${hour.openTime || ''} - ${hour.closeTime || ''}`}
                    </span>
                  </div>
                ))}
              </div>
            </div>
          )}

          {/* Actions */}
          <div class="bg-emerald-50 rounded-lg p-6">
            <h3 class="text-lg font-bold text-gray-900 mb-4">Quick Actions</h3>
            <div class="space-y-3">
              {store?.latitude && store?.longitude && (
                <a
                  href={`https://maps.google.com/?q=${store.latitude},${store.longitude}`}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="block w-full bg-emerald-600 hover:bg-emerald-700 text-white px-4 py-3 rounded-lg text-center font-semibold transition-colors"
                >
                  üó∫Ô∏è Get Directions
                </a>
              )}

              {storePhone && (
                <a
                  href={`tel:${storePhone}`}
                  class="block w-full bg-white border-2 border-emerald-600 text-emerald-600 hover:bg-emerald-50 px-4 py-3 rounded-lg text-center font-semibold transition-colors"
                >
                  üìû Call Store
                </a>
              )}
            </div>
          </div>
        </div>
      </div>
    </div>

    {/* Back Link */}
    <div class="mt-12 text-center">
      <a
        href="/stores"
        class="inline-flex items-center px-6 py-3 bg-gray-100 hover:bg-gray-200 text-gray-900 rounded-lg font-semibold transition-colors"
      >
        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
        </svg>
        Back to All Stores
      </a>
    </div>
  </div>
</Layout>
